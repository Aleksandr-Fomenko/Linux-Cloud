1. Запускаем тесты из описания задачи

admin@ip-172-31-19-232:/$ curl -s localhost:80 |tail -4
<body id="error-page">
        <div class="wp-die-message"><h1>Error establishing a database connection</h1></div></body>
</html>

admin@ip-172-31-19-232:/$ sudo docker exec wordpress mysqladmin -h mysql -u root -ppassword ping
mysqladmin: connect to server at 'mysql' failed
error: 'Unknown MySQL server host 'mysql' (-2)'
Check that mysqld is running on mysql and that the port is 3306.
You can check this by doing 'telnet mysql 3306'

2. Смотрим список запущенных контейнеров

admin@ip-172-31-19-232:/$ sudo docker ps -a
CONTAINER ID   IMAGE            COMMAND                  CREATED         STATUS         PORTS                    NAMES
6ffb084b515c   wordpress:sad    "docker-entrypoint.s…"   17 months ago   Up 7 minutes   0.0.0.0:80->80/tcp       wordpress
0eef97284c44   mariadb:latest   "docker-entrypoint.s…"   17 months ago   Up 7 minutes   0.0.0.0:3306->3306/tcp   mariadb

3. Изучаем ENV у контейнеров wordpress и mariadb

admin@ip-172-31-19-232:/$ sudo docker inspect wordpress

...
            "Env": [
                "WORDPRESS_DB_PASSWORD=password",
                "WORDPRESS_DB_USER=root",
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                "PHPIZE_DEPS=autoconf \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkg-config \t\tre2c",
                "PHP_INI_DIR=/usr/local/etc/php",
                "APACHE_CONFDIR=/etc/apache2",
                "APACHE_ENVVARS=/etc/apache2/envvars",
                "PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64",
                "PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64",
                "PHP_LDFLAGS=-Wl,-O1 -pie",
                "GPG_KEYS=42670A7FE4D0441C8E4632349E4FDC074A4EF02D 5A52880781F755608BF815FC910DEB46F53EA312",
                "PHP_VERSION=7.4.30",
                "PHP_URL=https://www.php.net/distributions/php-7.4.30.tar.xz",
                "PHP_ASC_URL=https://www.php.net/distributions/php-7.4.30.tar.xz.asc",
                "PHP_SHA256=ea72a34f32c67e79ac2da7dfe96177f3c451c3eefae5810ba13312ed398ba70d"
            ]
...

admin@ip-172-31-19-232:/$ sudo docker inspect mariadb

...
            "Env": [
                "MYSQL_ROOT_PASSWORD=password",
                "MYSQL_DATABASE=wordpress",
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                "GOSU_VERSION=1.14",
                "MARIADB_MAJOR=10.8",
                "MARIADB_VERSION=1:10.8.3+maria~jammy"
            ]
...

4. Проверяем что мы можем подключиться к бд wordpress в контейнере mariadb используя креды которые нашли в пункте 3

admin@ip-172-31-19-232:~$ sudo docker exec -it mariadb mysql -u root -ppassword wordpress
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 4
Server version: 10.8.3-MariaDB-1:10.8.3+maria~jammy mariadb.org binary distribution

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [wordpress]> exit
Bye

5. Согласно описанию задачи изучаем переменные для создания подключения к MySql в файле ./html/wp-config.php

admin@ip-172-31-19-232:~/html$ grep "WORDPRESS_DB_" wp-config.php

...
define( 'DB_NAME', getenv_docker('WORDPRESS_DB_NAME', 'wordpress') );
define( 'DB_USER', getenv_docker('WORDPRESS_DB_USER', 'example username') );
define( 'DB_PASSWORD', getenv_docker('WORDPRESS_DB_PASSWORD', 'example password') );
define( 'DB_HOST', getenv_docker('WORDPRESS_DB_HOST', 'mysql') );
define( 'DB_CHARSET', getenv_docker('WORDPRESS_DB_CHARSET', 'utf8') );
define( 'DB_COLLATE', getenv_docker('WORDPRESS_DB_COLLATE', '') );
...

6. Создаем файл docker-compose.yml

admin@ip-172-31-19-232:~$ vim docker-compose.yml

...
version: "3"

services:
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    hostname: mysql # Информация полученная из пункта 6 define( 'DB_HOST', getenv_docker('WORDPRESS_DB_HOST', 'mysql') );
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: wordpress

  wordpress:
    depends_on:
      - mariadb
    image: wordpress:sad
    container_name: wordpress
    hostname: wordpress
    ports:
      - 80:80
    environment:
      WORDPRESS_DB_PASSWORD: password
      WORDPRESS_DB_USER: root
...

7. Останавливаем, удаляем текущие контейнеры и запускаем docker-compose

admin@ip-172-31-19-232:~$ sudo docker stop mariadb wordpress
mariadb
wordpress

admin@ip-172-31-19-232:~$ sudo docker rm mariadb wordpress
mariadb
wordpress

admin@ip-172-31-19-232:~$ sudo docker-compose up -d
Creating network "admin_default" with the default driver
Creating mariadb ... done
Creating wordpress ... done

8. Запускаем тестовую команду из описания задачи
